* emacs.d

[[https://app.travis-ci.com/icostan/emacs.d.svg?branch=master]]

#+begin_quote
While any text editor can save your files, only Emacs can save your soul.
#+end_quote

** Highlights

   - declarative - with use-package and its macros, no orphan *setq* or *require* sexp
   - pluggable - use Emacs's defaults (project, vcs, etc), optionally enhance with extra packages (projectile, magit, etc)
   - literate - sync between Lisp and Org files
   - structured - programming/markup languages go under *langs/* dir, use case initialization files under *init/* dir
   - keybindings - remap keys under "SPC" but preserve the original purpose (e.g. "C-x p p" is the Emacs key to switch project, "SPC-p p" will do the same + extra goodies)
   - vim vs. emacs? - no problem, I use evil-mode
   - conit

** Programming/markup/data exchange languages

   Various programming/markup/etc languages...

   1. Asm
   2. Go
   3. Pine
   4. Python
   5. [[file:langs/README.org::*Ruby][Ruby]]
   6. lots more, see [[file:langs/README.org][programming language section]]

** Usage

   Get the project:

   #+begin_src sh
     git clone git@gitlab.com:icostan/emacs.d.git ~/Projects/emacs.d
     cd ~/Projects/emacs.d
   #+end_src

   Emacs version:

   #+begin_src sh
     make version
   #+end_src

   Run isolated (load project files only) Emacs instance:

   #+begin_src sh
     make run
   #+end_src

   Run emacs with ~/.emacs.d user directory:

   #+begin_src sh
     make run EMACSD=home.el
   #+end_src
